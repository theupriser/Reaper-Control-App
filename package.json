{
  "name": "reaper-control",
  "version": "1.0.0",
  "description": "Reaper Control Application with Frontend and Backend",
  "main": "main.js",
  "scripts": {
    "link-env": "[ -f .env ] || cp .env.example .env; ([ -d frontend ] && ln -sf ../.env frontend/.env; [ -d backend ] && ln -sf ../.env backend/.env)",
    "start-frontend": "cd frontend && npm run start",
    "start-backend": "cd backend && npm run start",
    "dev-frontend": "cd frontend && npm run dev",
    "dev-backend": "cd backend && npm run dev",
    "dev": "npm run link-env && concurrently \"npm run dev-backend\" \"npm run dev-frontend\"",
    "start": "npm run link-env && concurrently \"npm run start-backend\" \"npm run dev-frontend\"",
    "install-all": "npm install && cd frontend && npm install && cd ../backend && npm install",
    "electron:dev": "npm run link-env && cross-env NODE_ENV=development concurrently \"npm run dev-backend\" \"npm run dev-frontend\" \"electron .\"",
    "electron:start": "npm run link-env && electron .",
    "electron:build": "npm run link-env && cd frontend && npm run build && cd .. && electron-builder",
    "electron:build:mac": "npm run electron:build -- --mac",
    "electron:build:win": "npm run electron:build -- --win"
  },
  "dependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "electron": "^37.2.6",
    "electron-builder": "^26.0.12"
  },
  "build": {
    "appId": "com.reapercontrol.app",
    "productName": "Reaper Control",
    "files": [
      "main.js",
      "preload.js",
      "backend/**/*",
      "frontend/build/**/*",
      "!**/node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}",
      "!**/node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
      "!**/node_modules/*.d.ts",
      "!**/node_modules/.bin",
      "!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}",
      "!.env",
      "!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,thumbs.db,.gitignore,.gitattributes,.editorconfig,.flowconfig,.yarn-metadata.json,.idea,appveyor.yml,.travis.yml,circle.yml,npm-debug.log,.nyc_output,yarn.lock,.yarn-integrity}"
    ],
    "mac": {
      "category": "public.app-category.music",
      "target": [
        "dmg",
        "zip"
      ]
    },
    "win": {
      "target": [
        "nsis",
        "portable"
      ]
    },
    "linux": {
      "target": [
        "AppImage",
        "deb"
      ],
      "category": "Audio"
    },
    "directories": {
      "buildResources": "resources",
      "output": "dist"
    }
  }
}
