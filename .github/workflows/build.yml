name: Build Application

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies with environment fix
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ./install.bat
          else
            chmod +x ./install.sh
            ./install.sh
          fi
        shell: bash

      - name: Build application
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run build:win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run build:mac
          else
            npm run build:linux
          fi
        shell: bash

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: reaper-control-windows
          path: |
            dist/*.exe
            dist/win-unpacked/

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: reaper-control-macos
          path: |
            dist/*.dmg
            dist/mac-universal/

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: reaper-control-linux
          path: |
            dist/*.AppImage
            dist/*.snap
            dist/*.deb

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            reaper-control-windows/**
            reaper-control-macos/**
            reaper-control-linux/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
