image: node:22

stages:
  - install
  - build
  - release

variables:
  CACHE_FALLBACK_KEY: "default-node-modules"
  GIT_DEPTH: 0

# Cache node_modules for faster builds
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/
  policy: pull-push

# Define all build combinations
.build_template: &build_definition
  script:
    - echo "Building for $OS_TYPE - $ARCHITECTURE"

.windows_build: &windows_job
  <<: *build_definition
  variables:
    OS_TYPE: windows

.macos_build: &macos_job
  <<: *build_definition
  variables:
    OS_TYPE: macos

.linux_build: &linux_job
  <<: *build_definition
  variables:
    OS_TYPE: linux

# Install dependencies
install:
  stage: install
  script:
    - |
      if [ "$CI_RUNNER_EXECUTABLE_ARCH" = "windows" ]; then
        npm ci
      else
        chmod +x ./install.sh
        ./install.sh
      fi
    - npm install -g typescript # Ensure TypeScript is installed globally for all builds
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 day

# Windows x64 build
build:windows:x64:
  stage: build
  <<: *windows_job
  variables:
    ARCHITECTURE: x64
  script:
    - npm run build:win:x64
  artifacts:
    paths:
      - dist/*.exe
      - dist/*.msi
      - dist/*.zip
    expire_in: 1 week
  dependencies:
    - install
  only:
    - master
    - main
    - tags

# macOS x64 build
build:macos:x64:
  stage: build
  <<: *macos_job
  variables:
    ARCHITECTURE: x64
  script:
    - npm run build:mac:x64
  artifacts:
    paths:
      - dist/*.dmg
      - dist/*.zip
    expire_in: 1 week
  dependencies:
    - install
  only:
    - master
    - main
    - tags

# macOS arm64 build
build:macos:arm64:
  stage: build
  <<: *macos_job
  variables:
    ARCHITECTURE: arm64
  script:
    - npm run build:mac:arm64
  artifacts:
    paths:
      - dist/*.dmg
      - dist/*.zip
    expire_in: 1 week
  dependencies:
    - install
  only:
    - master
    - main
    - tags

# Linux x64 build
build:linux:x64:
  stage: build
  <<: *linux_job
  variables:
    ARCHITECTURE: x64
  script:
    - npm run build:linux:x64
  artifacts:
    paths:
      - dist/*.AppImage
      - dist/*.snap
      - dist/*.deb
    expire_in: 1 week
  dependencies:
    - install
  only:
    - master
    - main
    - tags

# Automatic release when tag is pushed
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  dependencies:
    - build:windows:x64
    - build:macos:x64
    - build:macos:arm64
    - build:linux:x64
  only:
    - tags
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release created from tag $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Windows Installer (x64)'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/reaper-control-${CI_COMMIT_TAG}-setup.exe?job=build:windows:x64'
          link_type: 'package'
        - name: 'macOS DMG (x64)'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/reaper-control-${CI_COMMIT_TAG}.dmg?job=build:macos:x64'
          link_type: 'package'
        - name: 'macOS DMG (arm64)'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/reaper-control-${CI_COMMIT_TAG}-arm64.dmg?job=build:macos:arm64'
          link_type: 'package'
        - name: 'Linux AppImage (x64)'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/reaper-control-${CI_COMMIT_TAG}.AppImage?job=build:linux:x64'
          link_type: 'package'
